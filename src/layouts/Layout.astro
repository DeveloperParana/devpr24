---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <div
      class="loader flex items-center justify-center text-center w-screen h-screen bg-neutral-950 z-50 gap-4 text-green-600"
    >
      <span id="loading" class="">0%</span>
    </div>
    <slot />
  </body>
</html>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/dist/ScrollTrigger";
  import imagesLoaded from "imagesloaded";
  import SplitType from "split-type";

  document.body.style.overflow = "hidden";

  gsap.registerPlugin(ScrollTrigger, SplitType);

  ScrollTrigger.defaults({
    toggleActions: "play pause resume reset",
    scroller: "body",
  });

  const images: HTMLImageElement[] = gsap.utils.toArray("img");

  const loader = document.querySelector("#loading")!;
  const updateProgress = (instance: any) =>
    (loader.textContent = `${Math.round(
      (instance.progressedCount * 100) / images.length,
    )}%`);

  const showDemo = () => {
    document.body.style.overflow = "auto";
    document?.scrollingElement?.scrollTo(0, 0);
    gsap.to(document.querySelector(".loader"), { autoAlpha: 0 });

    gsap.utils
      .toArray(".demo-gallery")
      .forEach((section: any, index: number) => {
        const w: HTMLElement = section.querySelector(".wrapper");
        const [x, xEnd] =
          index % 2
            ? ["100%", (w.scrollWidth - section.offsetWidth) * -1]
            : [w.scrollWidth * -1, 0];
        gsap.fromTo(
          w,
          { x },
          {
            x: xEnd,
            scrollTrigger: {
              trigger: section,
              scrub: 0.5,
            },
          },
        );
      });
  };

  gsap.to(".btn-scroll-down", {
    duration: 0.5,
    y: -20,
    repeat: -1,
    yoyo: true,
  });

  const fades = () => {
    gsap.from(".animate-top", {
      scrollTrigger: ".animate-top",
      y: 100,
      opacity: 0,
      ease: "none",
      scrub: true,
    });

    gsap.from(".animate-bottom", {
      scrollTrigger: ".animate-bottom",
      y: -100,
      opacity: 0,
      ease: "none",
      scrub: true,
    });

    gsap.from(".animate-left", {
      scrollTrigger: ".animate-left",
      x: -100,
      opacity: 0,
      ease: "none",
      scrub: true,
    });

    gsap.from(".animate-right", {
      scrollTrigger: ".animate-left",
      x: 100,
      opacity: 0,
      ease: "none",
      scrub: true,
    });
  };

  const textHero = () => {
    gsap.from(".text-hero span", {
      scrollTrigger: ".text-hero",
      stagger: 0.1,
      duration: 0.5,
      y: 200,
      opacity: 0,
      ease: "none",
      scrub: true,
    });
  };

  const menu = () => {
    gsap.from(".menu", {
      scrollTrigger: {
        trigger: ".main",
        start: "10% top",
        end: "20% center",
        scrub: true,
      },
      stagger: 0.1,
      opacity: 0,
      y: -100,
      ease: "none",
      scrub: true,
    });
  };

  const textSpeakers = () => {
    gsap.from(".text-speakers span", {
      scrollTrigger: {
        trigger: ".text-speakers",
        start: "center 90%",
        end: "center 40%",
        scrub: true,
      },
      stagger: 0.1,
      duration: 0.5,
      y: 100,
      opacity: 0,
      ease: "none",
      scrub: true,
    });
  };

  // const textSlider = () => {
  //   gsap.from(".text-slider span", {
  //     scrollTrigger: {
  //       trigger: ".text-slider",
  //       start: "center 90%",
  //       end: "center 40%",
  //       scrub: true,
  //     },
  //     stagger: 0.1,
  //     duration: 0.5,
  //     y: 100,
  //     opacity: 0,
  //     ease: "none",
  //     scrub: true,
  //   });
  // };

  const textTickets = () => {
    gsap.from(".text-tickets span", {
      scrollTrigger: {
        trigger: ".text-tickets",
        start: "center 90%",
        end: "center 40%",
        scrub: true,
      },
      stagger: 0.1,
      duration: 0.5,
      y: 100,
      opacity: 0,
      ease: "none",
      scrub: true,
    });
  };

  const textTest = () => {
    gsap.from(".text-test span", {
      scrollTrigger: ".text-test",
      stagger: 0.1,
      duration: 0.5,
      y: 200,
      opacity: 0,
      ease: "none",
      scrub: true,
    });
  };

  const speakers = () => {
    let horizontalSection = document.querySelector(".horizontal")!;
    gsap.to(".horizontal", {
      x: () => horizontalSection.scrollWidth * -1,
      xPercent: 100,
      scrollTrigger: {
        trigger: ".horizontal",
        start: "center center",
        end: "+=2000px", // calcular tamanho dos itens somados
        pin: "#horizontal-scoll",
        scrub: true,
        invalidateOnRefresh: true,
      },
    });
  };

  const speakersCards = () => {
    gsap.from(".horizontal-scoll-wrapper", {
      scrollTrigger: {
        trigger: ".horizontal-scoll-wrapper",
        start: "20% 90%",
        end: "center center",
        scrub: true,
      },
      stagger: 0.1,
      x: "100%",
      ease: "none",
      scrub: true,
    });
  };

  const tickets = () => {
    gsap.from(".tickets", {
      scrollTrigger: {
        trigger: ".tickets",
        start: "top bottom",
        end: "center 60%",
        scrub: true,
      },
      stagger: 0.1,
      duration: 0.5,
      borderRadius: "0.75rem",
      width: "70%",
      ease: "none",
      scrub: true,
    });
  };

  const gradient = () => {
    gsap.from(".gradient", {
      scrollTrigger: {
        trigger: "main",
        scrub: true,
        start: "top 90%",
        end: "bottom -100%",
      },
      background:
        "radial-gradient(circle at 0% 0%, rgba(10, 10, 10, 0.5), rgba(10, 10, 10, 0.9), rgba(10, 10, 10, 1), rgba(10, 10, 10, 1), rgba(10, 10, 10, 0.9), rgba(10, 10, 10, 0.5))",
      ease: "none",
    });
  };

  const lineSchedule = () => {
    gsap.to(".line", {
      scrollTrigger: {
        trigger: "#schedule",
        scrub: true,
        start: "top 40%",
        end: "90% 70%",
      },
      ease: "none",
      height: "calc(100% - 60px)",
    });
  };

  const scheduleItems = () => {
    const array = document.querySelectorAll(".item-schedule");
    array.forEach((element, index) => {
      const valueCalcStart = (index * 10) / 2;
      const valueCalcEnd = (index * 10) / 2;

      gsap.from(`#${element.id}`, {
        scrollTrigger: {
          trigger: "#schedule",
          scrub: true,
          start: `${0 + valueCalcStart}% ${50 - valueCalcStart}%`,
          end: `${40 + valueCalcEnd}% ${80 - valueCalcEnd}%`,
        },
        ease: "none",
        opacity: 0,
        y: 50,
      });
    });
  };

  const textSchedule = () => {
    gsap.from(".text-schedule span", {
      scrollTrigger: {
        trigger: ".text-schedule",
        start: "center 90%",
        end: "center 40%",
        scrub: true,
      },
      stagger: 0.1,
      duration: 0.5,
      y: 100,
      opacity: 0,
      ease: "none",
      scrub: true,
    });
  };

  const aboutImages = () => {
    gsap.from(".about-images", {
      scrollTrigger: {
        trigger: "#about",
        scrub: true,
        start: "40% bottom",
        end: "bottom 100%",
      },
      opacity: 0,
      ease: "none",
    });

    gsap.from("#about-image-1", {
      scrollTrigger: {
        trigger: "#about",
        scrub: true,
        start: "top 40%",
        end: "bottom bottom",
      },
      x: 150,
      y: 100,
      rotate: 4,
      ease: "none",
    });

    gsap.from("#about-image-2", {
      scrollTrigger: {
        trigger: "#about",
        scrub: true,
        start: "top 40%",
        end: "bottom bottom",
      },
      x: -120,
      y: 140,
      rotate: 10,
      ease: "none",
    });

    gsap.from("#about-image-3", {
      scrollTrigger: {
        trigger: "#about",
        scrub: true,
        start: "top 40%",
        end: "bottom bottom",
      },
      x: 220,
      y: -120,
      rotate: -8,
      ease: "none",
    });
    gsap.from("#about-image-4", {
      scrollTrigger: {
        trigger: "#about",
        scrub: true,
        start: "top 40%",
        end: "bottom bottom",
      },
      x: 40,
      y: -200,
      rotate: -20,
      ease: "none",
    });
    gsap.from("#about-image-5", {
      scrollTrigger: {
        trigger: "#about",
        scrub: true,
        start: "top 40%",
        end: "bottom bottom",
      },
      x: -250,
      y: -200,
      rotate: -8,
      ease: "none",
    });
  };

  const textAbout = () => {
    gsap.from(".text-about span", {
      scrollTrigger: {
        trigger: ".text-about",
        start: "center bottom",
        end: "center center",
        scrub: true,
      },
      stagger: 0.1,
      duration: 0.5,
      y: 100,
      opacity: 0,
      ease: "none",
      scrub: true,
    });
  };

  const counterCards = () => {
    gsap.from("#counter .item-counter", {
      scrollTrigger: {
        trigger: "#counter",
        start: "center bottom",
        end: "bottom center",
        scrub: true,
      },
      stagger: 0.1,
      duration: 0.5,
      y: 100,
      opacity: 0,
      ease: "none",
      scrub: true,
    });
  };

  const heroImage = () => {
    gsap.to("#hero-image img", {
      scrollTrigger: {
        trigger: ".hero",
        start: "bottom bottom",
        end: "bottom top",
        scrub: true,
      },
      stagger: 0.1,
      width: "100%",
      height: "100vh",
      ease: "none",
      scrub: true,
    });
  };

  (imagesLoaded(images) as any)
    .on("progress", updateProgress)
    .on("always", showDemo)
    .on("always", menu)
    .on("always", gradient)
    .on("always", textHero)
    .on("always", heroImage)
    .on("always", counterCards)
    .on("always", textAbout)
    .on("always", aboutImages)
    .on("always", fades)
    .on("always", speakers)
    .on("always", speakersCards)
    .on("always", textSpeakers)
    // .on("always", textSlider)
    .on("always", tickets)
    .on("always", textTickets)
    .on("always", textSchedule)
    .on("always", lineSchedule)
    .on("always", scheduleItems)
    .on("always", textTest);
</script>

<style is:global>
  html {
    font-family: "Space Grotesk", sans-serif;
    background: #0a0a0a;
    overflow-x: hidden;
    height: 100%;
    -webkit-overflow-scrolling: touch;
    overflow-scrolling: touch;
    margin: 0;
    padding: 0;
  }
  body {
    margin: 0;
    padding: 0;
    overflow-x: hidden;
    position: relative;
    height: unset;
  }

  ::-webkit-scrollbar {
    width: 16px;
  }

  ::-webkit-scrollbar-track {
    background: transparent;
  }

  ::-webkit-scrollbar-thumb {
    border-radius: 50px;
    background: #15803d;
    border: 4px solid #171717;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #16a34a;
  }

  .loader {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    color: white;
    z-index: 10000;
  }

  /* img.mask {
    mask-image: linear-gradient(
      -45deg,
      rgb(10, 10, 10),
      rgb(10, 10, 10, 0.5),
      transparent
    );
  } */

  img.mask,
  #about img {
    filter: brightness(0.6);
  }
</style>
